- name: Setup Draft frontend
  hosts: all
  tasks:
    - name: Store HOME directory
      debug:
        var: ansible_env.HOME

    - name: Check if Node.js is installed
      command: node --version
      register: node_installed
      failed_when: false
      changed_when: false

    - name: Install Node.js Package Manager
      yum:
        name: nodejs
        state: latest
      become: yes
      when: node_installed.rc != 0

    - name: Check if npm is installed
      command: npm --version
      register: npm_installed
      failed_when: false
      changed_when: false

    - name: Install Node.js Package Manager
      yum:
        name: npm
        state: latest
      become: yes
      when: npm_installed.rc != 0

    - name: Check if Git is installed
      command: git --version
      register: git_installed
      failed_when: false
      changed_when: false

    - name: Install Git
      yum:
        name: git
        state: latest
      become: yes
      when: git_installed.rc != 0

    - name: Clone repository if it doesn't exist
      git:
        repo: 'https://github.com/private-attribution/draft.git'
        dest: '{{ ansible_env.HOME }}/draft'
        version: self-host

    - name: Check if Traefik is installed
      command: '{{ ansible_env.HOME }}/draft/traefik version'
      register: traefik_installed
      failed_when: false
      changed_when: false

    - name: Download Traefik
      get_url:
        url: 'https://github.com/traefik/traefik/releases/download/v2.11.0/traefik_v2.11.0_linux_amd64.tar.gz'
        dest: '{{ ansible_env.HOME }}/traefik_v2.11.0_linux_amd64.tar.gz'
        checksum: 'sha256:7f31f1cc566bd094f038579fc36e354fd545cf899523eb507c3cfcbbdb8b9552'
      when: traefik_installed.rc != 0

    - name: Ensure extraction directory exists
      file:
        path: '{{ ansible_env.HOME }}/traefix_extract/'
        state: directory

    - name: Extract Traefik
      unarchive:
        src: '{{ ansible_env.HOME }}/traefik_v2.11.0_linux_amd64.tar.gz'
        dest: '{{ ansible_env.HOME }}/traefix_extract/'
        remote_src: yes
      when: traefik_installed.rc != 0

    - name: Copy Traefik binary into draft directory
      copy:
        src: '{{ ansible_env.HOME }}/traefix_extract/traefik'
        dest: '{{ ansible_env.HOME }}/draft'
        mode: '0775'
        remote_src: yes

    - name: Grant CAP_NET_BIND_SERVICE capability to traefik binary
      command: 'setcap cap_net_bind_service=+ep {{ ansible_env.HOME }}/draft/traefik'
      become: yes

    - name: Create cert directory
      file:
        path: '{{ ansible_env.HOME }}/cert'
        state: directory

    - name: Load cert.pem file
      shell: >
        aws secretsmanager get-secret-value
        --secret-id cert.pem
        --region {{ aws_region }}
        --query SecretString
        --output text > cert.pem
      args:
        chdir: '{{ ansible_env.HOME }}/cert'
        executable: /bin/bash


    - name: Load key.pem file
      shell: >
        aws secretsmanager get-secret-value
        --secret-id key.pem
        --region {{ aws_region }}
        --query SecretString
        --output text > key.pem
      args:
        chdir: '{{ ansible_env.HOME }}/cert'
        executable: /bin/bash

    - name: start traefik
      shell: >
        systemd-run --user
        --setenv=CERT_DIR={{ ansible_env.HOME }}/cert
        --setenv=DRAFT_DOMAIN={{ draft_domain }}
        --setenv=DRAFT_PORT={{ draft_port }}
        {{ansible_env.HOME }}/draft/traefik
        --configFile={{ ansible_env.HOME }}/draft/server/traefik/traefik.yaml
      args:
        chdir: '{{ ansible_env.HOME }}/draft'
        executable: /bin/bash
